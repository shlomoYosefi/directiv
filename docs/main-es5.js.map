{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comps/ny-component/ny-component.component.ts","webpack:///src/app/comps/ny-component/ny-component.component.html","webpack:///src/app/comps/nydirectiv.directive.ts","webpack:///src/app/comps/nyservies.service.ts","webpack:///src/app/comps/result/result.component.ts","webpack:///src/app/comps/result/result.component.html","webpack:///src/app/my-directiv2.directive.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","arrComps","array","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","NyComponentComponent","arrNumber","NydirectivDirective","myElement","myServe","nativeElement","style","background","counterMouse","counterClick","NyserviesService","providedIn","ResultComponent","MyDirectiv2Directive","element","myClick","host","color","emit","border","console","log","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  \n\n  title = 'directiv';\n  arrComps=[1,1,1,1]\n  array=[]\n}\n","<!-- <app-ny-component *ngFor = \"let i of arrComps\"></app-ny-component>\n\n\n\n<br><br><br> -->\n\n\n\n<!-- <app-result></app-result> -->\n\n\n\n\n<button appMyDirectiv2 clickColor='red' (myClick)='array.push($event)'>clich 1</button><br><br><br>\n<button appMyDirectiv2 clickColor='yellow' (myClick)='array.push($event)'>clich 2</button><br><br><br>\n<button appMyDirectiv2 clickColor='blue' (myClick)='array.push($event)'>clich 3</button><br><br><br>\n<button appMyDirectiv2 clickColor='pink' (myClick)='array.push($event)'>clich 4</button><br><br><br>\n\n\n<ul>\n    <li *ngFor='let i of array'>{{i}}</li>\n</ul>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NyComponentComponent } from './comps/ny-component/ny-component.component';\nimport { NydirectivDirective } from './comps/nydirectiv.directive';\nimport { ResultComponent } from './comps/result/result.component';\nimport { MyDirectiv2Directive } from './my-directiv2.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NyComponentComponent,\n    NydirectivDirective,\n    ResultComponent,\n    MyDirectiv2Directive\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ny-component',\n  templateUrl: './ny-component.component.html',\n  styleUrls: ['./ny-component.component.css']\n})\nexport class NyComponentComponent implements OnInit {\n\n\n  arrNumber:number[]=[1,2,3,4,5,6,7]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<ul>\n    <li appNydirectiv *ngFor = \"let x of arrNumber\">my number is : {{x}}</li>\n</ul>\n","import { Directive, HostListener, ElementRef } from '@angular/core';\nimport { NyserviesService } from './nyservies.service';\n\n@Directive({\n  selector: '[appNydirectiv]'\n})\nexport class NydirectivDirective {\n\n  constructor(private myElement:ElementRef ,private myServe:NyserviesService) { }\n\n\n  @HostListener(\"mouseenter\") mouseEnter(){\n    this.myElement.nativeElement.style.background = 'red'\n    this.myServe.counterMouse++\n  }\n\n  @HostListener(\"click\") clichEnter(){\n    this.myElement.nativeElement.style.background = 'green'\n    this.myServe.counterClick++\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NyserviesService {\n\n  constructor() { }\n  \n  public counterMouse =0\n  public counterClick =0\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NyserviesService } from '../nyservies.service';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\nexport class ResultComponent implements OnInit {\n\n\n  constructor(public myServe:NyserviesService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n\n<label>count mouse is : {{myServe.counterMouse}}</label><br>\n<label>count click is : {{myServe.counterClick}}</label>","import { Directive, Input, ElementRef, OnInit, Output, HostListener, EventEmitter, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appMyDirectiv2]'\n})\nexport class MyDirectiv2Directive implements OnInit{\n\n  @Input('clickColor') color:string\n  myElement\n  @Output()myClick = new EventEmitter<string>()\n  @HostBinding('class.host') host =true\n  @HostBinding('style.border-color') border:string\n\n  constructor(element:ElementRef) {\n    this.myElement = element.nativeElement\n    this.myElement.style.color = this.color\n    \n    \n   }\n  ngOnInit(): void {\n    this.myElement.style.background = this.color\n    \n  }\n\n  @HostListener('click')click(){\n    \n    \n    // alert(`my color of click is : ${this.color}`)\n    this.myClick.emit(`my click is click ${this.color}`)\n    this.host = !this.host\n    this.border = this.host ? \"yellow\":\"red\"\n    console.log(this.host);\n  }\n\n \n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}